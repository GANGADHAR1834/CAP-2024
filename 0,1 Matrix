class Solution {
    public int[][] updateMatrix(int[][] mat) {
        int n = mat.length;
        int m = mat[0].length;
        int[][] k = new int[n][m];
        for(int i = 0 ; i<n ; i++){
            for(int j = 0; j<m ; j++){
                if(mat[i][j]==0){
                    k[i][j]=0;
                }
                else{
                    k[i][j]=Integer.MAX_VALUE-1;
                }
            }
        }

        for(int i = 0 ; i<n ; i++){
            for(int j = 0; j<m ; j++){
                if(k[i][j]!=0){
                    if(i-1>=0){
                        k[i][j]=Math.min(k[i][j],k[i-1][j]+1);
                    }
                    if(i+1<n){
                        k[i][j]=Math.min(k[i][j],k[i+1][j]+1);
                    }
                    if(j-1>=0){
                        k[i][j]=Math.min(k[i][j],k[i][j-1]+1);
                    }
                    if(j+1<m){
                        k[i][j]=Math.min(k[i][j],k[i][j+1]+1);
                    }
                }
            }
        }
        for(int i = n-1 ; i>=0 ; i--){
            for(int j = m-1; j>=0 ; j--){
                if(k[i][j]!=0){
                    if(i-1>=0){
                        k[i][j]=Math.min(k[i][j],k[i-1][j]+1);
                    }
                    if(i+1<n){
                        k[i][j]=Math.min(k[i][j],k[i+1][j]+1);
                    }
                    if(j-1>=0){
                        k[i][j]=Math.min(k[i][j],k[i][j-1]+1);
                    }
                    if(j+1<m){
                        k[i][j]=Math.min(k[i][j],k[i][j+1]+1);
                    }
                }
            }
        }
        return k;
    }
}
