/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> k = new ArrayList<>();
        if(root == null){
            return k;
        }
        Queue<TreeNode> a = new LinkedList<>();
        a.offer(root);
        while(a.size() != 0 ){
            int n = a.size();
            for(int i =1;i<=n ; i++){
                TreeNode x = a.poll();
                if(i==n){
                    k.add(x.val);
                }
                if(x.left != null){
                    a.add(x.left);
                }
                if(x.right != null){
                    a.add(x.right);
                }

            }
        }
        return k;
    }
}
