/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer> k = new ArrayList<>();
    void inorder(TreeNode node)
    {
        if (node == null)
            return;
        inorder(node.left);
        k.add(node.val);
        inorder(node.right);
    }
    public int minDiffInBST(TreeNode root) {
        inorder(root);
        TreeSet<Integer> m = new TreeSet<>();
        for(int i = 0 ; i<k.size()-1 ; i++){
            int x = k.get(i);
            int y = k.get(i+1);
            int diff = y-x;
            m.add(diff);
        }
        return m.first();
    }
}
